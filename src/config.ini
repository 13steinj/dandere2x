[dandere2x]


# Binaries

waifu2x_caffe_cui_dir=C:\\Users\\windwoz\\Desktop\\waifu2x-caffe\\waifu2x-caffe-cui.exe

waifu2x_conv_dir=C:\Users\windwoz\Desktop\plz\pythonreleases\1.2\dist\gui_driver\externals\waifu2x-cpp-conv\waifu2x-converter-cpp.exe
waifu2x_conv_dir_dir=C:\Users\windwoz\Desktop\plz\pythonreleases\1.2\dist\gui_driver\externals\waifu2x-cpp-conv\

waifu2x_vulkan_dir=C:\Users\windwoz\Desktop\w2x_vulkan\w2x.exe
waifu2x_vulkan_dir_dir=C:\Users\windwoz\Desktop\w2x_vulkan

dandere2x_cpp_dir=C:\Users\windwoz\Documents\github_projects\dandere2x_cpp\cmake-build-debug\dandere2x_cpp.exe
ffmpeg_dir=C:\Users\windwoz\Documents\ffmpeg-20190328-f8fa8bb-win64-static\bin\ffmpeg.exe
ffprobe_dir=C:\Users\windwoz\AppData\Local\video2x\ffmpeg-latest-win64-static\bin\ffprobe.exe

# Directories

workspace=C:\Users\windwoz\Desktop\plz\pythonreleases\1.1\demo_folder\fix_names_forever\
file_dir=C:\Users\windwoz\Desktop\plz\customvideos\violetep8.mkv


# Upscaling Settings #

# Note - For Vulkan scale factor 2 only works.

waifu2x_type=vulkan
noise_level=3
scale_factor=2


# Dandere2x Settings #

## step_Size = the step_size when calculating motion prediction in diamond block matching
## block_size =  How big the blocks in block matching are when matching blocks.
## bleed = how many pixels will be included as a 'bleed' to reduce d2x bleeding. (see subreddit for more)
## quality_low = the minimum quality a block must have. This is set by jpeg's standards in pythons library.
## extension_type = the type of image that will be used during processing
## audio_type = what kind of audio file to use for re-merging

block_size=30
step_size=4
bleed=1
quality_low=80
extension_type=.jpg

## waifu2x_wrapper commands ##

waifu2x_vulkan_upscale_frame = [waifu2x_vulkan_dir] -v -j 2:2:2 -n [noise_level] -s [scale_factor] -m C:\Users\windwoz\Desktop\w2x_vulkan\models-upconv_7_anime_style_art_rgb -i [input_file] -t 200 -o [output_file]
waifu2x_caffe_upscale_frame = [waifu2x_caffe_cui_dir] -i [input_file] -p cudnn -n [noise_level] -s [scale_factor] --gpu 0 -o [output_file]

## FFMPEG Options ##

# extract_audio_command: The command that will be used to extract audio from ffmpeg.
# extract_frames_command: the command that will be used to extract individual frames from ffmpeg
# video_from_frames_command: The command to merge individual frames into a single video during runtime.
# merge_video_command: Combining a bunch of individual videos into one video.

extract_audio_command = [ffmpeg_dir] -i [file_dir] -t 00:00:02 -map [audio_layer] [output_file]
extract_frames_command = [ffmpeg_dir] -i [file_name] -qscale:v 2 -t 00:00:02 -vf noise=c1s=8:c0f=u [output_file]
migrate_tracks_command = [ffmpeg_dir] -i [no_audio] -i [file_dir] -t 00:00:02 -map 0:v:0 -map 1? -c copy -map -1:v? [output_file]

video_from_frames_command = [ffmpeg_dir] -loglevel 0 -nostats -framerate [frame_rate] -start_number [start_number] -i [input_frames] -vframes [end_number] -vf deband=blur=false:range=22 [output_file]
merge_video_command = [ffmpeg_dir] -f concat -safe 0 -i [text_file] -c:v libx264 -crf 17 [output_file]


## Real Time Encoding Options ##

# realtime_encoding=1 will automatically encode files into a video during runtime.
# realtime_encoding_delete_files=1 will delete video files that were encoded into a video. I highly recommend this to be
#                                  OFF (aka 0) if you're experimenting w/ dandere2x settings.

realtime_encoding=1
realtime_encoding_delete_files=0

## Developer Settings ##
# debug=1 will print out debug frames in the 'debug' folder the user to observe dandere2x stuff.

debug=1

# deprecated #

dandere_dir = null